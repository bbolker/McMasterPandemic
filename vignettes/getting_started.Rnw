%\VignetteIndexEntry{getting started}
%\VignetteEngine{knitr::knitr}
%\VignetteEncoding{UTF-8}
\documentclass[12pt]{article}
\input{nlipreamble}

%% code listing
\usepackage{listings}
\usepackage{color}
\lstset{
    showstringspaces=false,
    basicstyle=\ttfamily,
    commentstyle=\color[grey]{0.6},
    stringstyle=\color[RGB]{255,150,75}
}
\newcommand{\inlinecode}[2]{{\lstinline[language=#1]$#2$}}
\renewcommand{\code}[1]{\inlinecode{R}{#1}}

<<setup,echo=FALSE>>=
knitr::opts_chunk$set(
  collapse = TRUE,
  fig.height = 4,
  dev = "pdf",
  ##dev = "tikz",
  cache = FALSE,
  ##warning=FALSE,
  comment = "#>"
)
@

\title{\texttt{McMasterPandemic}: getting started}

\author{Ben Bolker and David Earn\\\texttt{earn@math.mcmaster.ca}}

\begin{document}
\linenumbers

\maketitle

\begin{abstract}
  \texttt{McMasterPandemic} is an \Rlogo package that provides tools
  for simulating and forecasting infectious disease outbreaks, using
  compartmental epidemic models.  The primary mechanistic framework is
  a susceptible-exposed-infectious-removed (SEIR) model, with
  additional compartments for individuals in acute and intensive care
  units in hospitals.
\end{abstract}

\tableofcontents

\section{Installation}

<<>>=
if (!("McMasterPandemic" %in% installed.packages())) {
    if (!("devtools" %in% installed.packages())) install.packages("devtools")
    devtools::install_github("bbolker/McMasterPandemic")
}
@

<<loadpkg,cache=FALSE>>=
library(McMasterPandemic)
@

\section{Data requirements}

\paragraph{Parameters}

To run simulations, a few parameter values must be specified.
Set these by editing the example params file, which is converted
to a \code{params_pansim} object by \code{read_params()}.

The term ``in acute care'' means ``in hospital but not in the
intensive care unit (ICU)''.

Note that the \code{print} method for \code{params_pansim} objects
returns a data frame with a column giving the meaning of each
parameter.

<<set params>>=
params1 <- read_params("../inst/params/ICU1.csv")
knitr::kable(print(params1, describe=TRUE))
@

\paragraph{Initial conditions}

The initial state must also be set, but it is sufficient to take
the population size and initially exposed population from the
\code{params_pansim} object (in which case all non-exposed individuals
will be assumed to be susceptible).

<<set initial state>>=
state1 <- make_state(N=params1[["N"]],E=params1[["E0"]],type="ICU1")
@

\paragraph{Start and end dates}

Dates on which the simulation starts and ends must be stated.  If
there are no observations that you are aiming to match, then these
dates are arbitrary and only the length of time matters.

<<dates>>=
sdate <- "10-Feb-2020"
edate <- "1-Jun-2020"

@

\section{Running a simulation}

<<run sim>>=
res1 <- run_sim(params1,state1,start_date=sdate,end_date=edate)
print(p1 <- (plot(res1,keep_states=c("ICU","H","D"),log=FALSE)))
print(p1 + scale_y_log10())
  ## filter zero values to avoid log-scale warning
  ##+ geom_point(data=dplyr::filter(clean_data,value>0)))
  ##)

@

\end{document}
